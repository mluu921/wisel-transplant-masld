---
title: Notebook
date: today
freeze: auto
---

```{r}
library(tidyverse)
library(gtsummary)
library(survival)
library(ggsurvfit)
library(tidycmprsk)
library(marginaleffects)
library(gt)
library(patchwork)
library(tidymodels)
library(mice)
library(Hmisc)
library(lme4)
library(broom.mixed)

source(here::here('src/process-data.R'))

board <- pins::board_folder(here::here('board'))

```

# Table 1: Demographics and Clinical Characteristics

```{r}
#| label: baseline-charcteristics
#| html-table-processing: none

local({
  data <- pins::pin_read(board, 'processed-data')

  data <- data |>
    filter(person_eval == 'yes')

  data <- data |>
    select(
      age_referral,
      sex,
      race_v2,
      marital_status,
      bmi,
      bmi_class,
      etiology_mash,
      contains('indications_lt'),
      -indications_lt_eval_other,
      contains('med_comorbidity')
    )

  tbl_summary(
    data,
    by = etiology_mash,
    label = list(
      age_referral ~ 'Age at Referral',
      sex ~ 'Sex',
      race_v2 ~ 'Race',
      marital_status ~ 'Marital Status',
      bmi ~ 'Body Mass Index (BMI)',
      bmi_class ~ 'BMI Class',
      med_comorbidity_dm ~ 'Diabetes Mellitus',
      med_comorbidity_htn ~ 'Hypertension',
      med_comorbidity_hld ~ 'Hyperlipidemia',
      med_comorbidity_cad ~ 'Coronary Artery Disease',
      indications_lt_decomp ~ 'Decompensated Cirrhosis',
      indications_lt_alf ~ 'Acute Liver Failure',
      indications_lt_hcc ~ 'Hepatocellular Carcinoma',
      indications_lt_other ~ 'Other Ind'
    ),
    value = list(contains('indications') ~ '1')
  ) |>
    add_overall() |>
    add_p()
})

```

```{r}
local({
  data <- pins::pin_read(board, 'processed-data')

  data <- data |>
    filter(person_eval == 'yes')

  data |>
    select(
      eval_outcome,
      listing_outcome,
      etiology_mash
    ) |>
    tbl_summary(
      by = etiology_mash
    ) |>
    add_overall() |>
    add_p()
})

```


# Cumulative Incidence Transplant and Waitlist Removal

> The study should display competing-risks cumulative incidence rates for transplant procedures and death on the waitlist and removals due to deterioration and improvement and other reasons.

- A: Died on waitlist
- B: Removed due to deterioration
- C: Transplanted

```{r}
#| label: cuminc-plot-waitlist-removal
#| fig-width: 18
#| fig-height: 8
#| dpi: 150

local({
  data <- pins::pin_read(board, 'processed-data')

  data <- data |>
    filter(eval_outcome == 'Waitlisted')

  data <- data |>
    filter(time_from_waitlist_to_event > 0)

  data <- data |>
    mutate(time_from_waitlist_to_event = time_from_waitlist_to_event / 365.25)

  c <- cuminc(
    Surv(time_from_waitlist_to_event, competing_risk_waitlist) ~ etiology_mash,
    data = data
  )

  construct_cuminc_plot <- \(x) {
    x +
      add_confidence_interval() +
      add_risktable(risktable_stats = 'n.risk') +
      scale_x_continuous(limits = c(0, 5)) +
      scale_y_continuous(limits = c(0, 1), labels = scales::percent_format()) +
      add_pvalue(
        pvalue_fun = scales::label_pvalue(),
        caption = "Gray's test: {p.value}"
      ) +
      theme(plot.margin = margin(t = 10, r = 10, b = 10, l = 20)) +
      labs(x = 'Years since waitlisting', y = 'Cumulative incidence')
  }

  plot_a <- ggsurvfit::ggcuminc(c, outcome = 1) |> construct_cuminc_plot()

  plot_b <- ggsurvfit::ggcuminc(c, outcome = 2) |> construct_cuminc_plot()

  plot_c <- ggsurvfit::ggcuminc(c, outcome = 3) |> construct_cuminc_plot()

  p <- map(list(plot_a, plot_b, plot_c), \(x) ggsurvfit::ggsurvfit_build(x)) |>
    wrap_plots() +
    plot_annotation(
      tag_levels = list(c(
        'A',
        '',
        'B',
        '',
        'C',
        '',
        'D',
        '',
        'E'
      ))
    ) &
    theme(
      plot.tag = element_text(
        face = 'bold',
        size = 25,
        margin = margin(t = 0, r = 5, b = 0, l = 0)
      ),
      panel.grid.minor = element_blank()
    )

  # p + ggview::canvas(width = 12, height = 8)

  p
})

```

- A: Died on waitlist
- B: Removed due to deterioration
- C: Transplanted

```{r}
#| label: cuminc-table-waitlist-removal
#| html-table-processing: none

local({
  data <- pins::pin_read(board, 'processed-data')

  data <- data |>
    filter(eval_outcome == 'Waitlisted')

  data <- data |>
    mutate(
      time_from_waitlist_to_event = time_from_waitlist_to_event / 365.25
    )

  c <- cuminc(
    Surv(time_from_waitlist_to_event, competing_risk_waitlist) ~ etiology_mash,
    data = data
  )

  tbl_data <- c |>
    tidy_cuminc(times = 0:5)

  tbl_data <- tbl_data |>
    mutate(
      outcome = factor(
        outcome,
        levels = 1:3,
        labels = c(
          'Died on waitlist',
          'Removed due to deterioration',
          'Transplanted'
        )
      )
    )

  tbl_data |>
    select(time, outcome, strata, estimate, conf.low, conf.high) |>
    transmute(
      time,
      outcome,
      strata,
      estimate = glue::glue(
        "{scales::percent(estimate)} ({scales::percent(conf.low)}, {scales::percent(conf.high)})"
      )
    ) |>
    pivot_wider(
      names_from = strata,
      values_from = estimate
    ) |>
    group_by(outcome) |>
    gt() |>
    cols_label(time = 'Time (years)', outcome = 'Outcome')
})

```

# Finegray Model

> Several essential problems need to be resolved before the study can proceed to publication. The primary issue with this study lies in its statistical methodology for outcome assessment. The three studied events — transplant, death, and delisting status — exist in a time-dependent relationship, competing with one another. The study requires time-dependent analysis because descriptive statistics, including medians and chi-square tests, fail to show these temporal relationships. The authors should use Fine–Gray competing risks models to analyze waitlist outcomes and multi-state or cause-specific Cox models to study patient transitions from referral to evaluation and listing, as well as transplant and removal. The authors should present subdistribution hazard ratios, along with confidence intervals, to achieve more accurate risk measurement.

> The researchers should perform log-rank tests and Cox proportional hazards models with relevant clinical covariates, including age, sex, MELD or MELD-Na score, and MELD 3.0 when available, BMI class, diabetes, coronary artery disease, portal vein thrombosis, hepatocellular carcinoma, decompensation status, and center. 

```{r}
#| label: finegray-model-transplant-waitlist-removal-death
#| html-table-processing: none

out <- local({
  data <- pins::pin_read(board, 'processed-data')

  data <- data |>
    filter(eval_outcome == 'Waitlisted')

  data <- data |>
    filter(time_from_waitlist_to_event > 0)

  data <- data |>
    mutate(time_from_waitlist_to_event = time_from_waitlist_to_event / 365.25)

  data <- data |>
    mutate(
      bmi_class = factor(
        bmi_class,
        levels = c(
          "Normal",
          "Underweight",
          "Overweight",
          "Obese",
          "Morbidly Obese"
        )
      )
    )

  data <- recipe(
    time_from_waitlist_to_event + competing_risk_waitlist ~
      age_referral +
        sex +
        site_name +
        bmi_class +
        meld_listing +
        total_comorbs +
        etiology_mash,
    data = data
  ) |>
    prep() |>
    bake(new_data = NULL)

  pred_methods <- c(
    age_referral = "",
    sex = "logreg",
    site_name = "",
    bmi_class = "polyreg",
    meld_listing = "pmm",
    total_comorbs = "",
    etiology_mash = "",
    time_from_waitlist_to_event = "",
    competing_risk_waitlist = ""
  )

  set.seed(1)
  m <- mice::mice(data, m = 5, method = pred_methods, printFlag = FALSE)

  fits <- map(1:3, \(x) {
    fit.mult.impute(
      Surv(time_from_waitlist_to_event, competing_risk_waitlist) ~
        age_referral +
          sex +
          site_name +
          bmi_class +
          meld_listing +
          total_comorbs +
          etiology_mash,
      data = data,
      xtrans = m,
      fitter = crr,
      fitargs = list(failcode = x),
      pr = FALSE
    )
  })

  map(fits, \(x) {
    tbl_regression(x, exponentiate = TRUE) |>
      bold_p()
  }) |>
    tbl_merge(
      tab_spanner = c(
        '**Died on waitlist**',
        '**Removed due to deterioration**',
        '**Transplanted**'
      )
    )
})

out
```

# Construct Imputation for GLM models

```{r}
m <- local({
  data <- pins::pin_read(board, 'processed-data')

  data <- data |>
    filter(person_eval == 'yes')

  data <- data |>
    mutate(
      bmi_class = factor(
        bmi_class,
        levels = c(
          "Normal",
          "Underweight",
          "Overweight",
          "Obese",
          "Morbidly Obese"
        )
      )
    )

  data <- data |>
    mutate(
      outcome = fct_collapse(
        eval_outcome,
        'Waitlisted' = c('Waitlisted'),
        'Not Waitlisted' = c(
          'Declined',
          'Deferred'
        )
      ),
      outcome = case_when(
        outcome == 'Waitlisted' ~ 1,
        outcome == 'Not Waitlisted' ~ 0
      )
    )

  data <- recipe(
    outcome ~
      age_referral +
        sex +
        site_name +
        bmi_class +
        meld_eval +
        total_comorbs +
        etiology_mash,
    data = data
  ) |>
    prep() |>
    bake(new_data = NULL)

  pred_methods <- c(
    age_referral = "",
    sex = "logreg",
    site_name = "polyreg",
    bmi_class = "polyreg",
    meld_eval = "pmm",
    total_comorbs = "",
    etiology_mash = "",
    outcome = ""
  )

  set.seed(1)
  m <- mice::mice(data, m = 5, method = pred_methods, printFlag = FALSE)
})

```

# Logistic Regression Model - Factors Associated with Waitlisting

```{r}
#| label: glm-waitlisting
#| html-table-processing: none

fits <- with(
  m,
  lme4::glmer(
    outcome ~
      age_referral +
        sex +
        bmi_class +
        meld_eval +
        total_comorbs +
        etiology_mash +
        (1 | site_name),
    family = binomial()
  )
)

fits |>
  tbl_regression(exponentiate = TRUE) |>
  bold_p()
```

# Logistic Regression Model - Factors Associated with Waitlisting

```{r}
#| label: glm-waitlisting-bmi-interaction-marginal-table
#| html-table-processing: none

out <- local({
  fits0 <- with(
    m,
    lme4::glmer(
      outcome ~
        age_referral +
          sex +
          bmi_class +
          etiology_mash +
          meld_eval +
          total_comorbs +
          (1 | site_name),
      family = binomial()
    )
  )

  fits <- with(
    m,
    lme4::glmer(
      outcome ~
        age_referral +
          sex +
          bmi_class * etiology_mash +
          meld_eval +
          total_comorbs +
          (1 | site_name),
      family = binomial()
    )
  )

  lr_test <- D1(fits, fits0)

  p_int <- lr_test$result[, 4]

  p_int <- scales::label_pvalue()(p_int)

  tbl <- marginaleffects::avg_comparisons(
    fits,
    variables = 'etiology_mash',
    by = 'bmi_class',
    transform = exp
  )

  tbl |>
    as_tibble() |>
    select(bmi_class, estimate, conf.low, conf.high, p.value) |>
    gt() |>
    fmt_number(estimate:conf.high, decimals = 2) |>
    fmt(p.value, fns = scales::label_pvalue()) |>
    cols_merge(
      columns = c(estimate, conf.low, conf.high),
      pattern = "{1} ({2}, {3})"
    ) |>
    tab_footnote(
      footnote = glue::glue('P for interaction = {p_int}')
    )
})

out

```

```{r}
#| label: glm-waitlisting-sex-interaction-marginal-table
#| html-table-processing: none

out <- local({
  fits0 <- with(
    m,
    lme4::glmer(
      outcome ~
        age_referral +
          bmi_class +
          sex +
          etiology_mash +
          meld_eval +
          total_comorbs +
          (1 | site_name),
      family = binomial()
    )
  )

  fits <- with(
    m,
    lme4::glmer(
      outcome ~
        age_referral +
          bmi_class +
          sex * etiology_mash +
          meld_eval +
          total_comorbs +
          (1 | site_name),
      family = binomial()
    )
  )

  lr_test <- D1(fits, fits0)

  p_int <- lr_test$result[, 4]

  p_int <- scales::label_pvalue()(p_int)

  tbl <- marginaleffects::avg_comparisons(
    fits,
    variables = 'sex',
    by = 'etiology_mash',
    transform = exp
  )

  tbl |>
    as_tibble() |>
    select(etiology_mash, estimate, conf.low, conf.high, p.value) |>
    gt() |>
    fmt_number(estimate:conf.high, decimals = 2) |>
    fmt(p.value, fns = scales::label_pvalue()) |>
    cols_merge(
      columns = c(estimate, conf.low, conf.high),
      pattern = "{1} ({2}, {3})"
    ) |>
    tab_footnote(
      footnote = glue::glue('P for interaction = {p_int}')
    )
})

out

```

# Logistic Regression Model - Factors Associated with Waitlisting
- Evaluation Outcome Stratified by Site 
  
```{r}
#| label: glm-waitlisting-site-interaction-marginal-table
#| html-table-processing: none
out <- local({
  fits0 <- with(
    m,
    lme4::glmer(
      outcome ~
        age_referral +
          bmi_class +
          site_name +
          etiology_mash +
          meld_eval +
          total_comorbs +
          (1 | site_name),
      family = binomial()
    )
  )

  fits <- with(
    m,
    lme4::glmer(
      outcome ~
        age_referral +
          bmi_class +
          site_name * etiology_mash +
          meld_eval +
          total_comorbs +
          (1 | site_name),
      family = binomial()
    )
  )

  lr_test <- D1(fits, fits0)

  p_int <- lr_test$result[, 4]

  p_int <- scales::label_pvalue()(p_int)

  tbl <- marginaleffects::avg_comparisons(
    fits,
    variables = 'etiology_mash',
    by = 'site_name',
    transform = exp
  )

  tbl |>
    as_tibble() |>
    select(site_name, estimate, conf.low, conf.high, p.value) |>
    gt() |>
    fmt_number(estimate:conf.high, decimals = 2) |>
    fmt(p.value, fns = scales::label_pvalue()) |>
    cols_merge(
      columns = c(estimate, conf.low, conf.high),
      pattern = "{1} ({2}, {3})"
    ) |>
    tab_footnote(
      footnote = glue::glue('P for interaction = {p_int}')
    )
})

out
```


# Survival Analysis

```{r}
construct_km_figure <- \(x) {
  x |>
    ggsurvfit::ggsurvfit() +
    add_confidence_interval() +
    add_risktable(risktable_stats = 'n.risk') +
    scale_x_continuous(limits = c(0, 5)) +
    scale_y_continuous(limits = c(0, 1), labels = scales::percent_format()) +
    add_pvalue(
      pvalue_fun = scales::label_pvalue(),
      caption = "Logrank Test: {p.value}"
    ) +
    theme(plot.margin = margin(t = 10, r = 10, b = 10, l = 20)) +
    labs(x = 'Years since Waitlist Removal', y = 'Overall Survival (%)')
}
```

```{r}
#| label: survival-plot-waitlist-removal
#| fig-width: 8
#| fig-height: 8
#| dpi: 150

out <- local({
  data <- pins::pin_read(board, 'processed-data')

  data <- data |>
    filter(person_eval == 'yes')

  data <- data |>
    filter(listing_outcome == 'Waitlist removal')

  data <- data |>
    mutate(
      etiology_mash = fct_rev(etiology_mash)
    )

  data <- data |>
    filter(time_from_waitlist_removal_to_death > 0)

  data <- data |>
    filter(time_from_waitlist_removal_to_death < 5000)

  data <- data |>
    mutate(
      time_from_waitlist_removal_to_death = time_from_waitlist_removal_to_death /
        365.25
    )

  survfit2(
    Surv(time_from_waitlist_removal_to_death, mortality_outcome) ~
      etiology_mash,
    data = data
  ) |>
    construct_km_figure()
})

out
```

```{r}
#| label: survival-plot-transplant
#| fig-width: 8
#| fig-height: 8
#| dpi: 150

out <- local({
  data <- pins::pin_read(board, 'processed-data')

  data <- data |>
    filter(person_eval == 'yes')

  data <- data |>
    filter(listing_outcome == 'Transplanted')

  data <- data |>
    filter(time_from_transplant_to_death > 0)

  data <- data |>
    filter(time_from_transplant_to_death < 5000)

  data <- data |>
    mutate(
      time_from_transplant_to_death = time_from_transplant_to_death /
        365.25
    )

  data <- data |>
    mutate(
      etiology_mash = fct_rev(etiology_mash)
    )

  survfit2(
    Surv(time_from_transplant_to_death, mortality_outcome) ~ etiology_mash,
    data = data
  ) |>
    construct_km_figure()
})

out
```

> The researchers should perform Cox regression analysis to model post-removal survival based on the reason for removal. 

- A: MASLD
- B: Non-MASLD

```{r}
#| label: survival-plot-waitlist-removal-reason
#| fig-width: 24
#| fig-height: 16
#| dpi: 150

out <- local({
  data <- pins::pin_read(board, 'processed-data')

  data <- data |>
    filter(person_eval == 'yes')

  data <- data |>
    filter(listing_outcome == 'Waitlist removal')

  data <- data |>
    filter(time_from_waitlist_removal_to_death > 0)

  data <- data |>
    filter(time_from_waitlist_removal_to_death < 5000)

  data <- data |>
    mutate(
      time_from_waitlist_removal_to_death = time_from_waitlist_removal_to_death /
        365.25
    )

  data <- data |>
    mutate(
      etiology_mash = fct_rev(etiology_mash)
    )

  params <- data |>
    group_nest(waitlist_removal_recode) |>
    filter(!is.na(waitlist_removal_recode))

  params$km <- map(params$data, \(x) {
    km <- survfit2(
      Surv(time_from_waitlist_removal_to_death, mortality_outcome) ~
        etiology_mash,
      data = x
    ) |>
      construct_km_figure()

    ggsurvfit_build(km)
  })

  wrap_plots(params$km) +
    plot_annotation(
      tag_levels = list(c('A', '', 'B', '', 'C', '', 'E', '', 'F', '', 'G'))
    ) &
    theme(
      plot.tag = element_text(
        face = 'bold',
        size = 25,
        margin = margin(t = 0, r = 5, b = 0, l = 0)
      ),
      panel.grid.minor = element_blank()
    )
})

out
```


```{r}
#| label: coxph-surv-waitlist-removal
#| html-table-processing: none

out <- local({
  data <- pins::pin_read(board, 'processed-data')

  data <- data |>
    filter(person_eval == 'yes')

  data <- data |>
    filter(listing_outcome == 'Waitlist removal')

  data <- data |>
    filter(time_from_waitlist_removal_to_death > 0)

  data <- data |>
    filter(time_from_waitlist_removal_to_death < 5000)

  data <- data |>
    mutate(
      time_from_waitlist_removal_to_death = time_from_waitlist_removal_to_death /
        365.25
    )

  data <- data |>
    mutate(
      bmi_class = factor(
        bmi_class,
        levels = c(
          "Normal",
          "Underweight",
          "Overweight",
          "Obese",
          "Morbidly Obese"
        )
      )
    )

  data <- recipe(
    time_from_waitlist_removal_to_death + mortality_outcome ~
      age_referral +
        sex +
        site_name +
        bmi_class +
        meld_listing +
        total_comorbs +
        etiology_mash +
        waitlist_removal_recode,
    data = data
  ) |>
    prep() |>
    bake(new_data = NULL)

  pred_methods <- c(
    age_referral = "",
    sex = "",
    site_name = "",
    bmi_class = "polyreg",
    meld_listing = "pmm",
    total_comorbs = "",
    etiology_mash = "",
    waitlist_removal_recode = "polyreg",
    time_from_waitlist_removal_to_death = "",
    mortality_outcome = ""
  )

  set.seed(1)
  m <- mice::mice(data, m = 5, method = pred_methods, printFlag = FALSE)

  fits0 <- with(
    m,
    coxph(
      Surv(time_from_waitlist_removal_to_death, mortality_outcome) ~
        age_referral +
          sex +
          site_name +
          bmi_class +
          meld_listing +
          total_comorbs +
          waitlist_removal_recode +
          etiology_mash
    )
  )

  fits0 |>
    tbl_regression(exponentiate = TRUE) |>
    bold_p()
})

out
```

```{r}
#| label: coxph-surv-waitlist-removal-interaction
#| html-table-processing: none

out <- local({
  data <- pins::pin_read(board, 'processed-data')

  data <- data |>
    filter(person_eval == 'yes')

  data <- data |>
    filter(listing_outcome == 'Waitlist removal')

  data <- data |>
    filter(time_from_waitlist_removal_to_death > 0)

  data <- data |>
    filter(time_from_waitlist_removal_to_death < 5000)

  data <- data |>
    mutate(
      time_from_waitlist_removal_to_death = time_from_waitlist_removal_to_death /
        365.25
    )

  data <- data |>
    mutate(
      bmi_class = factor(
        bmi_class,
        levels = c(
          "Normal",
          "Underweight",
          "Overweight",
          "Obese",
          "Morbidly Obese"
        )
      )
    )

  data <- recipe(
    time_from_waitlist_removal_to_death + mortality_outcome ~
      age_referral +
        sex +
        site_name +
        bmi_class +
        meld_listing +
        total_comorbs +
        etiology_mash +
        waitlist_removal_recode,
    data = data
  ) |>
    prep() |>
    bake(new_data = NULL)

  pred_methods <- c(
    age_referral = "",
    sex = "",
    site_name = "",
    bmi_class = "polyreg",
    meld_listing = "pmm",
    total_comorbs = "",
    etiology_mash = "",
    waitlist_removal_recode = "polyreg",
    time_from_waitlist_removal_to_death = "",
    mortality_outcome = ""
  )

  set.seed(1)
  m <- mice::mice(data, m = 5, method = pred_methods, printFlag = FALSE)

  fits0 <- with(
    m,
    coxph(
      Surv(time_from_waitlist_removal_to_death, mortality_outcome) ~
        age_referral +
          sex +
          site_name +
          bmi_class +
          meld_listing +
          total_comorbs +
          waitlist_removal_recode +
          etiology_mash
    )
  )

  fits <- with(
    m,
    coxph(
      Surv(time_from_waitlist_removal_to_death, mortality_outcome) ~
        age_referral +
          sex +
          site_name +
          bmi_class +
          meld_listing +
          total_comorbs +
          waitlist_removal_recode *
            etiology_mash
    )
  )

  lr_test <- D1(fits, fits0)

  p_int <- lr_test$result[, 4]

  p_int <- scales::label_pvalue()(p_int)

  em <- emmeans::emmeans(
    fits,
    dunnett ~ etiology_mash | waitlist_removal_recode,
    type = 'response',
    infer = TRUE
  )

  em$contrasts |>
    as_tibble() |>
    select(waitlist_removal_recode, ratio, lower.CL, upper.CL, p.value) |>
    gt() |>
    fmt_auto() |>
    fmt(p.value, fns = scales::label_pvalue()) |>
    cols_merge(
      columns = c(ratio, lower.CL, upper.CL),
      pattern = "{1} ({2}, {3})"
    ) |>
    tab_footnote(
      footnote = glue::glue('P for interaction = {p_int}')
    )
})

out
```